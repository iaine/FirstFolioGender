<!doctype html>
<head>
<title>Quantitative Analysis</title>
</head>
<body>
  <h1>Frequency Counts</h1>
<article>
  <div id="whole">
    <p> This a visualisation of the counts of lines spoken by marked up genders in a Midsummer Night's Dream. <br />
    A sonification can be heard by clicking on the sonification button.</p>
     <button type="button" onclick="playSound([16, 54, 30])">Listen to the Data</button>
     <div id="chart"> </div> 
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script type="application/javascript">
window.AudioContext = window.AudioContext || window.webkitAudioContext;
var audioCtx = new AudioContext();    

var w = 400;
var h = 400;
var r = h/2;
var color = d3.scaleOrdinal(d3.schemeCategory20);

var data = [{"label":"No Gender", "value":16}, 
		          {"label":"Male", "value":54}, 
		          {"label":"Female", "value":30}];


var vis = d3.select('#chart').append("svg:svg").data([data]).attr("width", w).attr("height", h).append("svg:g").attr("transform", "translate(" + r + "," + r + ")");
var pie = d3.pie().value(function(d){return d.value;});

// declare an arc generator function
var arc = d3.arc().outerRadius(r);

// select paths, use arc generator to draw
var arcs = vis.selectAll("g.slice").data(pie).enter().append("svg:g").attr("class", "slice");
arcs.append("svg:path")
    .attr("fill", function(d, i){
        return color(i);
    })
    .attr("d", arc);
// add the text
arcs.append("svg:text").attr("transform", function(d){
			d.innerRadius = 0;
			d.outerRadius = r;
    return "translate(" + arc.centroid(d) + ")";}).attr("text-anchor", "middle").text(function(d, i) {
      return data[i].label;}
    );

// set the width / height boundaries. 
var WIDTH = window.innerWidth;
var HEIGHT = window.innerHeight;

var xPos = Math.floor(WIDTH/2);
console.log("width is " + xPos);
var yPos = Math.floor(HEIGHT/2);
	    
/**
* Create Note class
*/
 _old = 0;
 var Note = (function(audioCtx) {
    function Note(frequency){
      this.frequency = 60 + frequency;
      this.note_length = 3;
	    console.log("Freq: " + this.frequency + " length:" + this.note_length + " pos " + _old);
    }	    
    Note.prototype.start = function() {

    // set up the panner and listener objects
    var listener = audioCtx.listener;
    //set up a static listener
    listener.setOrientation(0,0,-1,0,1,0);
    listener.setPosition(xPos,yPos,300);

    var oscillator = audioCtx.createOscillator();
    oscillator.type = "sine";
    oscillator.frequency.value = this.frequency; // value in hertz
    oscillator.start(_old);
    oscillator.stop(_old + this.note_length);
    oscillator.connect(audioCtx.destination);
    _old++;
    };

    return Note;
  })(audioCtx);
/**
*  Function to use Web Audio to playsound
*/
function playSound(data) {
    for (var d in data) {
	 //play notes at the same time
         note = new Note(data[d]);
         note.start(); 
    }
}
    </script>
  </div>
</article>
</body>
</html>
